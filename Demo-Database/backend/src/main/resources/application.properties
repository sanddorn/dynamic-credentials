management.endpoint.health.probes.enabled=true
management.health.livenessState.enabled=true
management.health.readinessState.enabled=true
management.endpoints.web.exposure.include=info,health,metrics
spring.main.banner-mode=off
spring.application.name=backend
server.port=8080

#Don't do this in production!
spring.cloud.vault.authentication=token
spring.cloud.vault.token=${VAULT_TOKEN:root} 

spring.cloud.vault.enabled=${VAULT_ENABLED:false}
spring.cloud.vault.uri=${VAULT_URI:http://localhost:8200}

spring.cloud.vault.database.backend=database
spring.cloud.vault.database.enabled=true
spring.cloud.vault.database.role=${BACKEND_DB_ROLE:backend}
spring.cloud.vault.database.username-property=spring.data.mongodb.username
spring.cloud.vault.database.password-property=spring.data.mongodb.password

spring.cloud.vault.app-role.role=${APPLICATON_ROLE:frontend}

spring.config.import= optional:vault://

spring.data.mongodb.username=${MONGODB_USERNAME:admin}
spring.data.mongodb.password=${MONGODB_PASSWORD:admin}
spring.data.mongodb.host=${MONGODB_HOST:localhost:27017}
spring.data.mongodb.uuid-representation=standard
spring.data.mongodb.uri=mongodb://${spring.data.mongodb.username}:${spring.data.mongodb.password}@${spring.data.mongodb.host}/${spring.data.mongodb.database}
spring.data.mongodb.database=hero

rest.username=${USERNAME:admin}
rest.password=${PASSWORD:admin}

#---
spring.config.activate.on-cloud-platform=kubernetes
spring.cloud.vault.authentication=kubernetes
spring.cloud.vault.kubernetes.role=${APPLICATION_ROLE:backend}

